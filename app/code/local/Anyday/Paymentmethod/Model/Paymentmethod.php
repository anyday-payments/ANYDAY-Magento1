<?php
class Anyday_Paymentmethod_Model_Paymentmethod extends Mage_Payment_Model_Method_Abstract
{
    const NAME_URL                      = 'url';
    const NAME_TRANSACTION              = 'transactionId';
    const NAME_QUOTE                    = 'quoteId';
    const NAME_AMOUNT                   = 'amount';

    protected $_formBlockType           = 'adpaymentmethod/form_anyday';

    protected $_code                    = Anyday_Paymentmethod_Model_Config::PAYMENT_CODE;
    protected $_isInitializeNeeded      = true;
    protected $_canUseInternal          = false;
    protected $_canUseForMultishipping  = false;
    protected $_canCapture              = true;
    protected $_canAuthorize            = true;
    protected $_canCapturePartial       = true;
    protected $_canRefund               = true;
    protected $_canRefundInvoicePartial = true;

    /**
     * @var Mage_Core_Model_Abstract|null
     */
    private $sessionCheckout;

    /**
     * @var Anyday_Paymentmethod_Helper_Anyday|null
     */
    private $helperAnyday;

    public function __construct()
    {
        $this->sessionCheckout  = Mage::getSingleton('checkout/session');
        $this->helperAnyday     = Mage::helper('adpaymentmethod/anyday');
    }

    public function authorize(Varien_Object $payment, $amount)
    {
        return parent::authorize($payment, $amount); // TODO: Change the autogenerated stub
    }

    /**
     * @return $this|Anyday_Paymentmethod_Model_Paymentmethod|Mage_Payment_Model_Abstract
     * @throws Mage_Core_Exception
     */
    public function validate()
    {
        parent::validate();
        //$this->sessionCheckout->setAdOptins('');
        if ($this->isValidateQuote()) {
            $grandTotal = (double)$this->getInfoInstance()->getQuote()->getGrandTotal();
            $this->getInfoInstance()->getQuote()->reserveOrderId();
            $this->getInfoInstance()->getQuote()->save();
            $sendParam = [
                'Amount' => $grandTotal,
                'Currency' => 'DKK',
                'OrderId' => (string)$this->getInfoInstance()->getQuote()->getData('reserved_order_id'),
                'SuccessRedirectUrl' => Mage::getUrl('adpaymentmethodfront/index/success',
                    array('quote'=>$this->getInfoInstance()->getQuote()->getId())
                ),
                'CancelPaymentRedirectUrl' => Mage::getUrl('adpaymentmethodfront/index/cancel',
                    array('quote'=>$this->getInfoInstance()->getQuote()->getId())
                ),
            ];

            $url = 'https://my.anyday.io/v1/payments';
            $data_string = json_encode($sendParam);
            $ch = curl_init($url);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data_string);
            $authorization = "Authorization: Bearer " . Mage::helper('adpaymentmethod/settings')->getApiKey();
            curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type:application/json', $authorization]);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            $result = curl_exec($ch);
            curl_close($ch);
            $result = json_decode($result);
            if (isset($result->errorCode) && !$result->errorCode && isset($result->transactionId)) {
                $this->sessionCheckout->setAdOptins([
                    self::NAME_URL          => 'https://my.anyday.io' . $result->authorizeUrl,
                    self::NAME_TRANSACTION  => $result->transactionId,
                    self::NAME_QUOTE        => (int)$this->getInfoInstance()->getQuote()->getId(),
                    self::NAME_AMOUNT       => (double)$this->getInfoInstance()->getQuote()->getGrandTotal()
                ]);
            } else {
                $errorText = Mage::helper('payment')->__('ANYDAY payment Error.');
                if (isset($result->errorMessage)) {
                    $errorText = Mage::helper('payment')->__($result->errorMessage);
                }
                throw new Anyday_Paymentmethod_Exception($errorText);
            }
        }

        return $this;
    }

    /**
     * @return mixed
     */
    public function getOrderPlaceRedirectUrl()
    {
        return Mage::getSingleton('checkout/session')->getAdOptins()['url'];
    }

    /**
     * @return bool
     * @throws Mage_Core_Exception
     */
    private function isValidateQuote()
    {
        if (is_object($this->getInfoInstance()->getQuote())) {
            if ($adOptions = $this->sessionCheckout->getAdOptins()) {
                $grandTotal = (double)$this->getInfoInstance()->getQuote()->getGrandTotal();
                if (isset($adOptions[self::NAME_QUOTE]) &&
                    $adOptions[self::NAME_QUOTE] == (int)$this->getInfoInstance()->getQuote()->getId() &&
                        isset($adOptions[self::NAME_AMOUNT]) && $adOptions[self::NAME_AMOUNT] == $grandTotal) {
                    return false;
                } else {
//                    $this->helperAnyday->cancelTransaction(
//                        isset($adOptions[self::NAME_TRANSACTION]) ? $adOptions[self::NAME_TRANSACTION] : ''
//                    );
                    $this->sessionCheckout->setAdOptins('');
                    return true;
                }
            }
            return true;
        }
        return false;
    }
}